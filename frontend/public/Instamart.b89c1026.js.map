{"mappings":"A,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,E,Q,C,Q,S,C,C,C,E,O,c,C,E,O,C,a,C,M,C,E,a,C,C,G,O,c,C,E,O,C,U,C,I,I,E,I,K,E,W,C,E,a,C,C,G,I,E,E,S,E,E,SCEA,IAAM,EAAY,CAAC,CAAA,YAAC,CAAA,CAAW,QAAC,CAAA,CAAO,UAAC,CAAA,CAAS,cAAC,CAAA,CAAc,IAE5D,GAAM,CAAC,EAAK,EAAQ,CAAC,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,CAAA,GAE/B,MACC,AADD,CAAA,EAAA,EAAA,GAAA,AAAA,EAAA,EAAA,QAAA,CAAA,CAEG,SAAA,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,CAAK,UAAU,qC,S,CAGf,EACE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,SADH,CAEK,UAAU,wDACV,QAAS,KAAK,EAAc,CAAA,EAAM,EAAG,SAAA,MAMxC,GAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,SAAD,CACG,UAAU,wDACR,QAAS,KAAK,EAAc,CAAA,EAAK,EAAG,SAAA,M,GAQzC,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,KAAD,CAAI,UAAU,4EAA6E,SAAA,C,GAC1F,GAAa,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,IAAd,CAAiB,SAAA,C,G,A,E,EAI1B,EAsCA,IAAA,EApCkB,KAEd,GAAM,CAAC,EAAkB,EAAqB,CAAC,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,CACpD,MAAM,CAAA,EACN,QAAQ,CAAA,EACR,QAAQ,CAAA,CACZ,GAEF,MACE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MADH,CACO,UAAU,WACZ,SAAA,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,CAAK,UAAU,mC,S,CAET,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MAAD,CAAK,UAAU,4DACZ,SAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,KAAD,CAAI,UAAU,4DAA4D,SAAA,2C,E,GAG9E,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAD,CAAa,cAAe,KAAK,EAAqB,CACrD,MAAM,CAAA,EACN,QAAQ,CAAA,EACR,QAAQ,CAAA,CACT,EAAE,EAAG,UAAW,EAAkB,KAA7B,CAAoC,QAAS,QAAS,YAAa,0V,GACxE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAD,CAAa,cAAe,KAAK,EAAqB,CACrD,MAAM,CAAA,EACN,QAAQ,CAAA,EACR,QAAQ,CAAA,CACT,EAAE,EAAG,UAAW,EAAkB,OAA7B,CAAsC,QAAS,UAAW,YAAa,0V,GAC5E,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAD,CAAa,cAAe,KAAK,EAAqB,CACrD,MAAM,CAAA,EACN,QAAQ,CAAA,EACR,QAAQ,CAAA,CACT,EAAE,EAAG,UAAW,EAAkB,OAA7B,CAAsC,QAAS,UAAW,YAAa,0V,G,A,E,EAIxF,C","sources":["<anon>","src/components/Instamart.js"],"sourcesContent":["function $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequire29b1\"];\nparcelRequire.register(\"5KNkF\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $430784062c124927$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\nconst $430784062c124927$var$SectionCard = ({ description: description , heading: heading , isVisible: isVisible , setVisibility: setVisibility  })=>{\n    const [init, setInit] = (0, $acw62.useState)(false);\n    return /*#__PURE__*/ (0, $ayMG0.jsx)((0, $ayMG0.Fragment), {\n        children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n            className: \"border-2 border-gray-600 px-8 py-4\",\n            children: [\n                isVisible ? /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                    className: \"px-3 py-1 text-white font-bold bg-purple-600 rounded \",\n                    onClick: ()=>{\n                        setVisibility(false);\n                    },\n                    children: \"Hide\"\n                }) : /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                    className: \"px-3 py-1 text-white font-bold bg-purple-600 rounded \",\n                    onClick: ()=>{\n                        setVisibility(true);\n                    },\n                    children: \"Show\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)(\"h1\", {\n                    className: \"text-gray-100 font-bold bg-gray-800 w-20 rounded my-4 flex justify-center\",\n                    children: heading\n                }),\n                isVisible && /*#__PURE__*/ (0, $ayMG0.jsx)(\"p\", {\n                    children: description\n                })\n            ]\n        })\n    });\n};\nconst $430784062c124927$var$Instamart = ()=>{\n    const [sectionVisibility, setSectionVisibility] = (0, $acw62.useState)({\n        about: true,\n        contact: false,\n        carrier: false\n    });\n    return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n        className: \"flex p-4\",\n        children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n            className: \"flex flex-col   w-full px-8 py-4\",\n            children: [\n                /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                    className: \"flex justify-center items-center bg-gray-200 my-4 rounded\",\n                    children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"h1\", {\n                        className: \"flex justify-center text-[30px] font-bold text-purple-500\",\n                        children: \"I have Implemented Lazy Loading over here\"\n                    })\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)($430784062c124927$var$SectionCard, {\n                    setVisibility: ()=>{\n                        setSectionVisibility({\n                            about: true,\n                            contact: false,\n                            carrier: false\n                        });\n                    },\n                    isVisible: sectionVisibility.about,\n                    heading: \"about\",\n                    description: \"Lazy loading in React is a technique used to improve the performance of your application by loading components only when they are needed, instead of loading all components upfront. This is particularly beneficial for large applications with many components, as it helps reduce the initial load time and optimizes the usage of network resources.\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)($430784062c124927$var$SectionCard, {\n                    setVisibility: ()=>{\n                        setSectionVisibility({\n                            about: false,\n                            contact: true,\n                            carrier: false\n                        });\n                    },\n                    isVisible: sectionVisibility.contact,\n                    heading: \"contact\",\n                    description: \"Lazy loading in React is a technique used to improve the performance of your application by loading components only when they are needed, instead of loading all components upfront. This is particularly beneficial for large applications with many components, as it helps reduce the initial load time and optimizes the usage of network resources.\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)($430784062c124927$var$SectionCard, {\n                    setVisibility: ()=>{\n                        setSectionVisibility({\n                            about: false,\n                            contact: false,\n                            carrier: true\n                        });\n                    },\n                    isVisible: sectionVisibility.carrier,\n                    heading: \"carrier\",\n                    description: \"Lazy loading in React is a technique used to improve the performance of your application by loading components only when they are needed, instead of loading all components upfront. This is particularly beneficial for large applications with many components, as it helps reduce the initial load time and optimizes the usage of network resources.\"\n                })\n            ]\n        })\n    });\n};\nvar $430784062c124927$export$2e2bcd8739ae039 = $430784062c124927$var$Instamart;\n\n});\n\n\n//# sourceMappingURL=Instamart.b89c1026.js.map\n","import React,{useState} from 'react'\r\n\r\nconst SectionCard=({description,heading,isVisible,setVisibility})=>{\r\n\r\n    const [init,setInit]=useState(false);\r\n  \r\n   return(\r\n    <>\r\n      <div className='border-2 border-gray-600 px-8 py-4'>\r\n      {\r\n      \r\n      isVisible ?  \r\n        <button \r\n           className='px-3 py-1 text-white font-bold bg-purple-600 rounded ' \r\n           onClick={()=>{setVisibility(false)}}>\r\n              Hide\r\n        </button> \r\n          \r\n          : \r\n          \r\n        <button \r\n           className='px-3 py-1 text-white font-bold bg-purple-600 rounded '\r\n             onClick={()=>{setVisibility(true)}}>\r\n            Show\r\n        </button>\r\n        \r\n        }\r\n\r\n\r\n\r\n        <h1 className='text-gray-100 font-bold bg-gray-800 w-20 rounded my-4 flex justify-center'>{heading}</h1>\r\n        {isVisible && <p>{description}</p>}\r\n      </div>\r\n    </>\r\n   )\r\n}\r\n\r\nconst Instamart = () => {\r\n\r\n    const [sectionVisibility,setSectionVisibility]=useState({\r\n        about:true,\r\n        contact:false,\r\n        carrier:false\r\n    });\r\n\r\n  return (\r\n    <div className='flex p-4'>\r\n       <div className='flex flex-col   w-full px-8 py-4'>\r\n  \r\n             <div className='flex justify-center items-center bg-gray-200 my-4 rounded'>\r\n                <h1 className='flex justify-center text-[30px] font-bold text-purple-500'>I have Implemented Lazy Loading over here</h1>\r\n             </div>\r\n\r\n            <SectionCard setVisibility={()=>{setSectionVisibility({\r\n             about:true,\r\n             contact:false,\r\n             carrier:false\r\n            })}} isVisible={sectionVisibility.about} heading={\"about\"} description={\"Lazy loading in React is a technique used to improve the performance of your application by loading components only when they are needed, instead of loading all components upfront. This is particularly beneficial for large applications with many components, as it helps reduce the initial load time and optimizes the usage of network resources.\"}/>\r\n            <SectionCard setVisibility={()=>{setSectionVisibility({\r\n             about:false,\r\n             contact:true,\r\n             carrier:false\r\n            })}} isVisible={sectionVisibility.contact} heading={\"contact\"} description={\"Lazy loading in React is a technique used to improve the performance of your application by loading components only when they are needed, instead of loading all components upfront. This is particularly beneficial for large applications with many components, as it helps reduce the initial load time and optimizes the usage of network resources.\"}/>\r\n            <SectionCard setVisibility={()=>{setSectionVisibility({\r\n             about:false,\r\n             contact:false,\r\n             carrier:true\r\n            })}} isVisible={sectionVisibility.carrier} heading={\"carrier\"} description={\"Lazy loading in React is a technique used to improve the performance of your application by loading components only when they are needed, instead of loading all components upfront. This is particularly beneficial for large applications with many components, as it helps reduce the initial load time and optimizes the usage of network resources.\"}/>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Instamart\r\n"],"names":["parcelRequire","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","value","configurable","get","$430784062c124927$export$2e2bcd8739ae039","set","s","enumerable","$ayMG0","$acw62","$430784062c124927$var$SectionCard","description","heading","isVisible","setVisibility","init","setInit","useState","jsx","Fragment","children","jsxs","className","onClick","sectionVisibility","setSectionVisibility","about","contact","carrier"],"version":3,"file":"Instamart.b89c1026.js.map"}